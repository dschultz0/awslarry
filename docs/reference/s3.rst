.. py:module:: larry.s3
.. py:currentmodule:: larry.s3

:py:mod:`s3`
======================

The :py:mod:`~larry.s3` module provides a variety of tools for interacting with S3 Buckets and Objects in ways that
are more accessible to Python users. Many Python types can be written and read from S3 without the need
to perform any additional manipulation of the data.

Buckets, Keys, and URIs
------------------------------
S3 storage revolves around two identifiers, a *bucket* and a *key*. A *bucket* is a location in one of the AWS regions
that is owned by your account. A *key* identifies an object within that bucket. S3 doesn't technically have any
directories like a file system, but it's not uncommon to assign keys that denote a file structure such as
*my-dir/sub-dir/object.txt*. When you read or write a file from S3 the system expects you to provide a bucket name and
key to denote the location you're trying to access.

It's not uncommon for other AWS services to use S3 URIs instead of buckets and keys to denote the location of data.
Those URIs take the form of *s3://my-bucket/my-dir/sub-dir/object.txt* where the bucket name is *my-bucket* and the
key is *my-dir/sub-dir/object.txt*. Most operations in this module can handle either URIs or bucket/key pairs.

.. code-block:: python

    import larry as lry
    value = lry.s3.read_str(bucket='my-bucket', key='my-dir/sub-dir/object.txt')
    value = lry.s3.read_str(uri='s3://my-bucket/my-dir/sub-dir/object.txt')

Locations can be provided using named parameters as shown above or using positional values as shown below.

.. code-block:: python

    import larry as lry
    value = lry.s3.read_str('my-bucket', 'my-dir/sub-dir/object.txt')
    value = lry.s3.read_str('s3://my-bucket/my-dir/sub-dir/object.txt')


Examples
----------------------

Reading and writing Python dict objects
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Reading and writing JSON-Lines files
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Working with files
^^^^^^^^^^^^^^^^^^

Reading and writing other file types
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Functions
----------------------

Read
^^^^

.. autofunction:: read
.. autofunction:: read_as
.. autofunction:: read_list_as
.. autofunction:: read_iter_as
.. autofunction:: read_dict
.. autofunction:: read_str
.. autofunction:: read_list_of_dict
.. autofunction:: read_list_of_str

Write
^^^^^

.. autofunction:: write
.. autofunction:: write_as
.. autofunction:: write_delimited
.. autofunction:: append
.. autofunction:: append_as
.. autofunction:: write_temp

File
^^^^

.. autofunction:: fetch
.. autofunction:: upload
.. autofunction:: download
.. autofunction:: download_to_temp
.. autofunction:: download_to_zip

URI, URL and path
^^^^^^^^^^^^^^^^^

.. autofunction:: split_uri
.. autofunction:: uri_bucket
.. autofunction:: uri_key
.. autofunction:: join_uri
.. autofunction:: basename
.. autofunction:: basename_split
.. autofunction:: url

Utilities
^^^^^^^^^

.. autofunction:: delete
.. autofunction:: size
.. autofunction:: move
.. autofunction:: copy
.. autofunction:: exists
.. autofunction:: list_objects
.. autofunction:: find_keys_not_present
.. autofunction:: make_public
.. autofunction:: create_bucket
.. autofunction:: delete_bucket
.. autofunction:: temp_bucket


The Bucket Class
----------------------

.. autoclass:: Bucket

.. autofunction:: larry.s3.Bucket.exists
.. autofunction:: larry.s3.Bucket.url
.. autofunction:: larry.s3.Bucket.website


The Object Class
----------------------

.. autoclass:: Object

.. autofunction:: larry.s3.Object.tags
.. autofunction:: larry.s3.Object.exists
.. autofunction:: larry.s3.Object.set_acl
.. autofunction:: larry.s3.Object.make_public
.. autofunction:: larry.s3.Object.url


